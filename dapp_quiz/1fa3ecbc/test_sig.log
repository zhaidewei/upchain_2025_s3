🚀 开始测试 Permit2 直接签名转账...
📋 配置信息:
  ERC20合约: 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512
  User1 (签名者): 0x70997970C51812dc3A010C7d01b50e0d17dc79C8
  User2 (spender): 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC
🔍 检查nonce状态...
📊 Nonce状态信息:
  地址: 0x70997970C51812dc3A010C7d01b50e0d17dc79C8
  Nonce: 0
  状态: ❌ 已使用
  WordPos: 0
  BitPos: 0
🔍 为 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 寻找未使用的nonce，从 0 开始...
✅ 找到未使用的nonce: 1
🎯 推荐使用的nonce: 1

🔍 检查初始状态...
📊 初始状态:
  User1 ERC20余额: 90000000000000000000
  User2 ERC20余额: 0
💸 生成签名并执行Permit2直接转账...
🎯 修正后的Permit2直接调用流程:
  1. User1签名授权User2作为spender (EIP712签名包含spender)
  2. User2直接调用Permit2的permitTransferFrom方法 (函数参数不包含spender)
  3. Permit2从msg.sender获取spender，验证签名中spender字段
  4. 成功转移token从User1到User2

🔍 检查nonce状态...
📋 使用推荐的nonce: 1
✅ 最终使用的nonce: 1

🔍 EIP712签名数据 (包含spender):
  Domain: {
  name: 'Permit2',
  chainId: 31337,
  verifyingContract: '0x5FbDB2315678afecb367f032d93F642f64180aa3'
}
  Types: {
  PermitTransferFrom: [
    { name: 'permitted', type: 'TokenPermissions' },
    { name: 'spender', type: 'address' },
    { name: 'nonce', type: 'uint256' },
    { name: 'deadline', type: 'uint256' }
  ],
  TokenPermissions: [
    { name: 'token', type: 'address' },
    { name: 'amount', type: 'uint256' }
  ]
}
  Message: {
  permitted: {
    token: '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512',
    amount: 10000000000000000000n
  },
  spender: '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC',
  nonce: 1n,
  deadline: 1753801039n
}
  🎯 关键：EIP712签名包含spender字段

✅ User1生成的签名:
0xdc37a03cb270366a274c31dc5dbb038c1a7180f2a34ba596df15583be47763521fdb15275fd95282d0e711c51f708cbe811fbac0f900b184fd533bcb44b6f1631c

🚀 User2调用Permit2的permitTransferFrom方法:
  调用者: User2 (msg.sender作为spender)
  合约地址: 0x5FbDB2315678afecb367f032d93F642f64180aa3
  方法: permitTransferFrom
  参数结构:
    permit (PermitTransferFrom):
      permitted.token: 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512
      permitted.amount: 10000000000000000000
      nonce: 1
      deadline: 1753801039
      (不包含spender - 从msg.sender获取)
    transferDetails (SignatureTransferDetails):
      to: 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC
      requestedAmount: 10000000000000000000
    owner: 0x70997970C51812dc3A010C7d01b50e0d17dc79C8
    signature: 0xdc37a03cb270366a274c31dc5dbb038c1a7180f2a34ba596df15583be47763521fdb15275fd95282d0e711c51f708cbe811fbac0f900b184fd533bcb44b6f1631c

📋 完整命令:
cast send --rpc-url http://127.0.0.1:8545     --private-key 0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a     0x5FbDB2315678afecb367f032d93F642f64180aa3     "permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)"     "((0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512,10000000000000000000),1,1753801039)"     "(0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC,10000000000000000000)"     0x70997970C51812dc3A010C7d01b50e0d17dc79C8     0xdc37a03cb270366a274c31dc5dbb038c1a7180f2a34ba596df15583be47763521fdb15275fd95282d0e711c51f708cbe811fbac0f900b184fd533bcb44b6f1631c

🔄 执行流程:
  1. User1签名授权User2为spender (EIP712包含spender)
  2. User2调用Permit2.permitTransferFrom() (函数参数不包含spender)
  3. Permit2验证签名中spender == msg.sender (User2)
  4. Permit2将User1的token转给User2
  5. ✅ 完成！结构正确

🎉 Permit2 permitTransferFrom调用成功:

blockHash            0x991167382361710a6bc936e57770a7b54a3f49a4818f9768b40f616f4fd56d8a
blockNumber          7
contractAddress
cumulativeGasUsed    72299
effectiveGasPrice    461860875
from                 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC
gasUsed              72299
logs                 [{"address":"0xe7f1725e7734ce288f8367e1bb143e90bb3f0512","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000070997970c51812dc3a010c7d01b50e0d17dc79c8","0x0000000000000000000000003c44cdddb6a900fa2b585dd299e03d12fa4293bc"],"data":"0x0000000000000000000000000000000000000000000000008ac7230489e80000","blockHash":"0x991167382361710a6bc936e57770a7b54a3f49a4818f9768b40f616f4fd56d8a","blockNumber":"0x7","blockTimestamp":"0x6888d33f","transactionHash":"0xfec9b2d5a89d7f8e324b1f52cf08df84f5f7d0ae073cadd5b45e670ba4236eba","transactionIndex":"0x0","logIndex":"0x0","removed":false}]
logsBloom            0x
root
status               1 (success)
transactionHash      0xfec9b2d5a89d7f8e324b1f52cf08df84f5f7d0ae073cadd5b45e670ba4236eba
transactionIndex     0
type                 2
blobGasPrice         1
blobGasUsed
to                   0x5FbDB2315678afecb367f032d93F642f64180aa3

✅ gen_and_send_signature_direct.ts执行完成
🔍 检查最终状态...
📊 最终状态:
  User1 ERC20余额: 80000000000000000000
  User2 ERC20余额: 10000000000000000000
✅ 验证结果...
✅ User1 ERC20余额正确: 减少了10个token
✅ User2 ERC20余额正确: 增加了10个token
✅ 总供应量守恒: User1减少的 = User2增加的
🎉 Permit2直接转账测试完成!
📝 流程总结:
  1. User1签名授权User2为spender
  2. User2直接调用Permit2.permitTransferFrom()
  3. Permit2验证签名并转移token
  4. ✅ 无需TokenBank参与，简化了流程
